
services:
  main_db:
    image: postgres:13-bullseye
    restart: always
    pull_policy: always
    network_mode: "host"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${db_password}
      POSTGRES_USER: ${db_user}
      POSTGRES_DB: ${db_database}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${db_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  test_db:
    image: postgres:13-bullseye
    restart: always
    pull_policy: always
    network_mode: "host"
    volumes:
      - test_pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${test_db_password:-test_user}
      POSTGRES_USER: ${test_db_user:-test_password}
      POSTGRES_DB: ${test_db_database:-test_db}
      PGPORT: 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${test_db_user:-test_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: ./todo-list-app/Dockerfile
    depends_on:
      main_db:
        condition: service_healthy
      test_db:
        condition: service_healthy
    network_mode: "host"

volumes:
  pgdata:
  test_pgdata:


